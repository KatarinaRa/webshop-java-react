{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katar\\\\Desktop\\\\zavrsni\\\\frontend\\\\src\\\\CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CartPage() {\n  _s();\n  const [order, setOrder] = useState(null);\n  const [orderDetails, setOrderDetails] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Replace with actual user order ID\n    const orderId = 1;\n    const fetchOrderAndDetails = async () => {\n      try {\n        // Fetch UserOrder\n        const orderResponse = await axios.get(`http://localhost:8080/orders/${orderId}`);\n        setOrder(orderResponse.data);\n\n        // Fetch OrderDetails\n        const detailsResponse = await axios.get(`http://localhost:8080/orderDetails/${orderId}`);\n        console.log('orderDetails:', detailsResponse.data);\n        const fetchedOrderDetails = detailsResponse.data;\n\n        // Store order details\n        setOrderDetails(fetchedOrderDetails);\n\n        // Fetch products\n        const productRequests = fetchedOrderDetails.map(detail => axios.get(`http://localhost:8080/products/${detail.product.id}`));\n        const productResponses = await Promise.all(productRequests);\n        setProducts(productResponses.map(res => res.data));\n      } catch (error) {\n        console.error(error);\n        alert('Došlo je do pogreške prilikom dohvaćanja narudžbe i detalja.');\n      }\n    };\n    fetchOrderAndDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ko\\u0161arica\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), products.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Proizvod ID: \", product.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Ime proizvoda: \", product.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Cijena: \", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Natrag na popis proizvoda\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(CartPage, \"vwazPz0ch10rmgvLaZyJB2IUTWo=\");\n_c = CartPage;\nexport default CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","CartPage","_s","order","setOrder","orderDetails","setOrderDetails","products","setProducts","orderId","fetchOrderAndDetails","orderResponse","get","data","detailsResponse","console","log","fetchedOrderDetails","productRequests","map","detail","product","id","productResponses","Promise","all","res","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","index","className","name","price","to","_c","$RefreshReg$"],"sources":["C:/Users/katar/Desktop/zavrsni/frontend/src/CartPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CartPage() {\r\n  const [order, setOrder] = useState(null);\r\n  const [orderDetails, setOrderDetails] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Replace with actual user order ID\r\n    const orderId = 1;\r\n\r\n    const fetchOrderAndDetails = async () => {\r\n      try {\r\n        // Fetch UserOrder\r\n        const orderResponse = await axios.get(`http://localhost:8080/orders/${orderId}`);\r\n        setOrder(orderResponse.data);\r\n\r\n        // Fetch OrderDetails\r\n        const detailsResponse = await axios.get(`http://localhost:8080/orderDetails/${orderId}`);\r\n        console.log('orderDetails:', detailsResponse.data);\r\n        const fetchedOrderDetails = detailsResponse.data;\r\n\r\n        // Store order details\r\n        setOrderDetails(fetchedOrderDetails);\r\n\r\n        // Fetch products\r\n        const productRequests = fetchedOrderDetails.map(detail =>\r\n          axios.get(`http://localhost:8080/products/${detail.product.id}`),\r\n        );\r\n        const productResponses = await Promise.all(productRequests);\r\n        setProducts(productResponses.map(res => res.data));\r\n\r\n      } catch (error) {\r\n        console.error(error);\r\n        alert('Došlo je do pogreške prilikom dohvaćanja narudžbe i detalja.');\r\n      }\r\n    };\r\n\r\n    fetchOrderAndDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Košarica</h3>\r\n      {products.map((product, index) => (\r\n        <div key={index} className=\"cart-item\">\r\n          <p>Proizvod ID: {product.id}</p>\r\n          <p>Ime proizvoda: {product.name}</p>\r\n          <p>Cijena: {product.price}</p>\r\n          {/* Add any other necessary fields */}\r\n        </div>\r\n      ))}\r\n      <Link to=\"/\">Natrag na popis proizvoda</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,OAAO,GAAG,CAAC;IAEjB,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF;QACA,MAAMC,aAAa,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,gCAA+BH,OAAQ,EAAC,CAAC;QAChFL,QAAQ,CAACO,aAAa,CAACE,IAAI,CAAC;;QAE5B;QACA,MAAMC,eAAe,GAAG,MAAMjB,KAAK,CAACe,GAAG,CAAE,sCAAqCH,OAAQ,EAAC,CAAC;QACxFM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,eAAe,CAACD,IAAI,CAAC;QAClD,MAAMI,mBAAmB,GAAGH,eAAe,CAACD,IAAI;;QAEhD;QACAP,eAAe,CAACW,mBAAmB,CAAC;;QAEpC;QACA,MAAMC,eAAe,GAAGD,mBAAmB,CAACE,GAAG,CAACC,MAAM,IACpDvB,KAAK,CAACe,GAAG,CAAE,kCAAiCQ,MAAM,CAACC,OAAO,CAACC,EAAG,EAAC,CACjE,CAAC;QACD,MAAMC,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACP,eAAe,CAAC;QAC3DV,WAAW,CAACe,gBAAgB,CAACJ,GAAG,CAACO,GAAG,IAAIA,GAAG,CAACb,IAAI,CAAC,CAAC;MAEpD,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAACA,KAAK,CAAC;QACpBC,KAAK,CAAC,8DAA8D,CAAC;MACvE;IACF,CAAC;IAEDlB,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChB1B,QAAQ,CAACY,GAAG,CAAC,CAACE,OAAO,EAAEa,KAAK,kBAC3BlC,OAAA;MAAiBmC,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACpC7B,OAAA;QAAA6B,QAAA,GAAG,eAAa,EAACR,OAAO,CAACC,EAAE;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCjC,OAAA;QAAA6B,QAAA,GAAG,iBAAe,EAACR,OAAO,CAACe,IAAI;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCjC,OAAA;QAAA6B,QAAA,GAAG,UAAQ,EAACR,OAAO,CAACgB,KAAK;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAHtBC,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACN,CAAC,eACFjC,OAAA,CAACF,IAAI;MAACwC,EAAE,EAAC,GAAG;MAAAT,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAAC/B,EAAA,CArDQD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAuDjB,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}