{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\katar\\\\Desktop\\\\zavrsni\\\\frontend\\\\src\\\\loginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './loginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginUser = async (email, password) => {\n  const user = {\n    email: email,\n    password: password\n  };\n  try {\n    const response = await axios.post('http://localhost:8080/login', user);\n    console.log('Odgovor:', response);\n    // Spremite token u localStorage, \n    // ali ovo će trenutno biti undefined jer server ne šalje token\n    localStorage.setItem('token', response.data.token);\n    if (response.status === 200) {\n      window.location.href = '/home';\n    }\n  } catch (error) {\n    console.error(error);\n    if (error.response) {\n      // Ako postoji odgovor od servera, prikažite poruku o grešci\n      setErrorMessage(error.response.data);\n    } else {\n      // Ako ne postoji odgovor (npr. mrežna greška), postavite generičku poruku o grešci\n      setErrorMessage(\"Došlo je do greške prilikom prijave.\");\n    }\n  }\n};\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const loginUser = async (email, password) => {\n    const user = {\n      email: email,\n      password: password\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/users/login', user);\n      console.log('Odgovor:', response);\n      // Spremite token u localStorage\n      localStorage.setItem('token', response.data.token);\n      window.location.href = '/home';\n    } catch (error) {\n      console.error(error);\n      if (error.response) {\n        // Ako postoji odgovor od servera, prikažite poruku o grešci\n        setErrorMessage(error.response.data);\n      } else {\n        // Ako ne postoji odgovor (npr. mrežna greška), postavite generičku poruku o grešci\n        setErrorMessage(\"Došlo je do greške prilikom prijave.\");\n      }\n    }\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleLogin = () => {\n    loginUser(email, password);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"loginfont\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: handlePasswordChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"8D86Krd579EZR1r4hvfj+dJaZ00=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","loginUser","email","password","user","response","post","console","log","localStorage","setItem","data","token","status","window","location","href","error","setErrorMessage","LoginForm","_s","setEmail","setPassword","errorMessage","handleEmailChange","event","target","value","handlePasswordChange","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/katar/Desktop/zavrsni/frontend/src/loginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './loginForm.css'\r\n\r\n\r\nconst loginUser = async (email, password) => {\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:8080/login', user);\r\n      console.log('Odgovor:', response);\r\n      // Spremite token u localStorage, \r\n      // ali ovo će trenutno biti undefined jer server ne šalje token\r\n      localStorage.setItem('token', response.data.token);\r\n  \r\n      if(response.status === 200) {\r\n        window.location.href = '/home';\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n  \r\n      if (error.response) {\r\n        // Ako postoji odgovor od servera, prikažite poruku o grešci\r\n        setErrorMessage(error.response.data);\r\n      } else {\r\n        // Ako ne postoji odgovor (npr. mrežna greška), postavite generičku poruku o grešci\r\n        setErrorMessage(\"Došlo je do greške prilikom prijave.\");\r\n      }\r\n    }\r\n  };\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const loginUser = async (email, password) => {\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:8080/users/login', user);\r\n      console.log('Odgovor:', response);\r\n      // Spremite token u localStorage\r\n      localStorage.setItem('token', response.data.token);\r\n  \r\n      window.location.href = '/home';\r\n    } catch (error) {\r\n      console.error(error);\r\n  \r\n      if (error.response) {\r\n        // Ako postoji odgovor od servera, prikažite poruku o grešci\r\n        setErrorMessage(error.response.data);\r\n      } else {\r\n        // Ako ne postoji odgovor (npr. mrežna greška), postavite generičku poruku o grešci\r\n        setErrorMessage(\"Došlo je do greške prilikom prijave.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    loginUser(email, password);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 className='loginfont'>Login</h1>\r\n      <ul>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n        <li>E-mail:<input className=\"login-input\" type=\"text\" name='email' placeholder=\"Email\" value={email} onChange={handleEmailChange} /></li>\r\n        <li>Password:<input className=\"login-input\"  type=\"password\" name='password' placeholder=\"Password\" value={password} onChange={handlePasswordChange} /></li>\r\n        <button className=\"login-button\" onClick={handleLogin}>Login</button>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}