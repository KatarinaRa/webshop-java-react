{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport '../ProductList.css';\nimport authHeader from '../services/auth-header';\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [productCategories, setProductCategories] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [sizes, setSizes] = useState([]);\n  const [genders, setGenders] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [sortType, setSortType] = useState('none');\n  const [formFields, setFormFields] = useState({\n    name: '',\n    description: '',\n    price: '',\n    color: '',\n    size: '',\n    gender: '',\n    imageURL: ''\n  });\n  useEffect(() => {\n    let sortedProducts = [...products];\n    if (sortType === 'asc') {\n      sortedProducts.sort((a, b) => a.price - b.price);\n    } else if (sortType === 'desc') {\n      sortedProducts.sort((a, b) => b.price - a.price);\n    }\n    setProducts(sortedProducts);\n  }, [sortType]);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.accessToken) {\n      if (user.roles && user.roles.includes('ROLE_ADMIN')) {\n        setIsAdmin(true);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    fetchProducts();\n    fetchProductCategories();\n    fetchColors();\n    fetchSizes();\n    fetchGenders();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/products`, {\n        headers: authHeader()\n      });\n      if (response.status === 200 && Array.isArray(response.data)) {\n        setProducts(response.data);\n      } else {\n        console.error(\"API didn't return valid product data:\", response.data);\n      }\n    } catch (error) {\n      console.error(\"Error fetching products:\", error);\n    }\n  };\n  const fetchProductCategories = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/productscategory', {\n        headers: authHeader()\n      });\n      setProductCategories(response.data);\n    } catch (error) {\n      console.error(\"Error fetching product categories:\", error);\n    }\n  };\n  const fetchColors = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/colors', {\n        headers: authHeader()\n      });\n      setColors(response.data);\n    } catch (error) {\n      console.error(\"Error fetching colors:\", error);\n    }\n  };\n  const fetchSizes = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/sizes', {\n        headers: authHeader()\n      });\n      setSizes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching sizes:\", error);\n    }\n  };\n  const fetchGenders = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/genders', {\n        headers: authHeader()\n      });\n      setGenders(response.data);\n    } catch (error) {\n      console.error(\"Error fetching genders:\", error);\n    }\n  };\n\n  // Ostatak koda ostaje nepromijenjen...\n}\n_s(ProductList, \"m/kLbMhtiAttvHqbnNw7/28qCM0=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","authHeader","ProductList","_s","products","setProducts","selectedCategory","setSelectedCategory","productCategories","setProductCategories","colors","setColors","sizes","setSizes","genders","setGenders","isAdmin","setIsAdmin","sortType","setSortType","formFields","setFormFields","name","description","price","color","size","gender","imageURL","sortedProducts","sort","a","b","user","JSON","parse","localStorage","getItem","accessToken","roles","includes","fetchProducts","fetchProductCategories","fetchColors","fetchSizes","fetchGenders","response","get","headers","status","Array","isArray","data","console","error","_c","$RefreshReg$"],"sources":["C:/Users/katar/Desktop/zavrsni/frontend/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport '../ProductList.css';\r\nimport authHeader from '../services/auth-header';\r\n\r\nfunction ProductList() {\r\n    const [products, setProducts] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState('');\r\n    const [productCategories, setProductCategories] = useState([]);\r\n    const [colors, setColors] = useState([]);\r\n    const [sizes, setSizes] = useState([]);\r\n    const [genders, setGenders] = useState([]);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [sortType, setSortType] = useState('none');\r\n    \r\n    const [formFields, setFormFields] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        color: '',\r\n        size: '',\r\n        gender: '',\r\n        imageURL: ''\r\n    });\r\n\r\n    useEffect(() =>{\r\n        let sortedProducts = [...products];\r\n        if (sortType === 'asc'){\r\n            sortedProducts.sort((a,b) => a.price - b.price)\r\n        }\r\n        else if (sortType === 'desc'){\r\n            sortedProducts.sort((a,b) => b.price - a.price);\r\n        }\r\n        setProducts(sortedProducts);\r\n    }, [sortType]);\r\n\r\n    useEffect(() => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user && user.accessToken) {\r\n            if (user.roles && user.roles.includes('ROLE_ADMIN')) {\r\n                setIsAdmin(true);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n        fetchProductCategories();\r\n        fetchColors();\r\n        fetchSizes();\r\n        fetchGenders();\r\n    }, []);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8080/products`, { \r\n                headers: authHeader(),\r\n            });\r\n    \r\n            if (response.status === 200 && Array.isArray(response.data)) {\r\n                setProducts(response.data);\r\n            } else {\r\n                console.error(\"API didn't return valid product data:\", response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching products:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchProductCategories = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/productscategory', {\r\n                headers: authHeader(),\r\n            });\r\n            setProductCategories(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching product categories:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchColors = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/colors', {\r\n                headers: authHeader(),\r\n            });\r\n            setColors(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching colors:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchSizes = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/sizes', {\r\n                headers: authHeader(),\r\n            });\r\n            setSizes(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching sizes:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchGenders = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:8080/genders', {\r\n                headers: authHeader(),\r\n            });\r\n            setGenders(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching genders:\", error);\r\n        }\r\n    };\r\n\r\n    // Ostatak koda ostaje nepromijenjen...\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}